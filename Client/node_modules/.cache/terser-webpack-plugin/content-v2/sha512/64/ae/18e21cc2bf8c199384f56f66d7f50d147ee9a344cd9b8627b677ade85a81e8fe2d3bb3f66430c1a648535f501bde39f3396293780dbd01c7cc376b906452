{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Tanuj Dwivedi\\\\Desktop\\\\project to be uploaded\\\\ReactChatApp\\\\Client\\\\src\\\\Message.js\",\"C:\\\\Users\\\\Tanuj Dwivedi\\\\Desktop\\\\project to be uploaded\\\\ReactChatApp\\\\Client\\\\src\\\\Chat.js\",\"C:\\\\Users\\\\Tanuj Dwivedi\\\\Desktop\\\\project to be uploaded\\\\ReactChatApp\\\\Client\\\\src\\\\App.js\",\"C:\\\\Users\\\\Tanuj Dwivedi\\\\Desktop\\\\project to be uploaded\\\\ReactChatApp\\\\Client\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Tanuj Dwivedi\\\\Desktop\\\\project to be uploaded\\\\ReactChatApp\\\\Client\\\\src\\\\index.js\"],\"names\":[\"Message\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"username\",\"message\",\"messages\",\"socket\",\"io\",\"connect\",\"sendMessage\",\"ev\",\"preventDefault\",\"alert\",\"emit\",\"on\",\"data\",\"console\",\"log\",\"setState\",\"concat\",\"toConsumableArray\",\"addMessage\",\"scrollToBottom\",\"el\",\"scrollIntoView\",\"behavior\",\"_this2\",\"react_default\",\"a\",\"createElement\",\"className\",\"id\",\"map\",\"ref\",\"type\",\"value\",\"onChange\",\"target\",\"onClick\",\"Component\",\"Chat\",\"login\",\"e\",\"clicked\",\"box\",\"document\",\"getElementById\",\"contentwrap\",\"style\",\"display\",\"src_Message\",\"React\",\"App\",\"src_Chat\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {Component} from 'react';\\r\\nimport io from \\\"socket.io-client\\\";\\r\\n\\r\\nclass Message extends Component\\r\\n{\\r\\n\\r\\n\\tconstructor(props){\\r\\n        super(props);\\r\\n\\r\\n        this.state = {\\r\\n            username: '',\\r\\n            message: '',\\r\\n            messages: []\\r\\n        }\\r\\n\\r\\n         this.socket = io.connect('localhost:5000');\\r\\n\\r\\n         const addMessage = (data) =>\\r\\n         {\\tconsole.log(data);\\r\\n         \\tthis.setState({messages: [...this.state.messages, data]});\\r\\n         \\tconsole.log(this.state.messages);\\r\\n         }\\r\\n\\r\\n         this.sendMessage = ev =>\\r\\n         {\\r\\n         \\tev.preventDefault();\\r\\n\\r\\n         \\tif(this.state.message == '')\\r\\n         \\t{\\r\\n         \\t\\talert(\\\"Please enter a message before sending\\\");\\r\\n         \\t}\\r\\n         \\telse\\r\\n         \\t{\\r\\n         \\tthis.socket.emit ('data' , {\\r\\n         \\t\\tusername: this.props.username,\\r\\n         \\t\\tmessage: this.state.message\\r\\n         \\t});\\r\\n         }\\r\\n         this.state.message = '';\\r\\n\\r\\n         }\\r\\n\\r\\n         this.socket.on('data', function(data)\\r\\n         {\\r\\n         \\taddMessage(data);\\r\\n         });\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n//scroll to bottom on recieving new messages\\r\\ncomponentDidMount() {\\r\\n    this.scrollToBottom();\\r\\n  }\\r\\n\\r\\n  componentDidUpdate() {\\r\\n    this.scrollToBottom();\\r\\n  }\\r\\n\\r\\n  scrollToBottom() {\\r\\n    this.el.scrollIntoView({ behavior: 'smooth' });\\r\\n  }\\r\\n//end\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\trender()\\r\\n\\t{\\r\\n\\t\\treturn(\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<span className=\\\"block\\\"> \\r\\n\\t\\t\\t\\t<div id=\\\"header\\\" > <span id=\\\"welcome\\\"> Welcome {this.props.username}, You are online now </span> </div>\\r\\n\\t\\t\\t\\t<div id=\\\"output\\\">\\r\\n\\t\\t\\t\\t\\t\\t{this.state.messages.map(message => {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\treturn (<div id=\\\"bubble\\\"> <strong> <span id=\\\"userName\\\"> {message.username}</span> <hr /> </strong>  {message.message} </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t})}\\r\\n\\r\\n\\t\\t\\t\\t\\t<div ref={el => { this.el = el; }} />\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t <span className=\\\"InputMessage\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<span><input type=\\\"text\\\" value = {this.state.message } onChange = {ev=> this.setState({message: ev.target.value})} /></span>\\r\\n\\t\\t\\t\\t<span><button type=\\\"button\\\" id=\\\"send\\\" onClick = {this.sendMessage} > Send </button></span>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t\\t \\r\\n\\t\\t\\t)\\r\\n\\t}\\r\\n}\\r\\n\\r\\nexport default Message;\",\"import React from 'react';\\r\\nimport Message from './Message.js';\\r\\nclass Chat extends React.Component\\r\\n{\\r\\n\\tstate = {\\r\\n\\t\\t username: null\\r\\n\\t}\\r\\n\\r\\n\\tlogin = (e) =>\\r\\n\\t{\\r\\n\\t\\t\\r\\n\\t\\t\\t\\tthis.setState({\\r\\n    \\t\\t\\tusername: e.target.value});\\r\\n  \\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\r\\n\\r\\n\\tclicked = (e) =>\\r\\n\\t\\t{\\r\\n\\t\\t\\tif(this.state.username == null)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\talert(\\\"Please enter username\\\");\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\telse {\\r\\n\\r\\n\\t\\t\\tvar box = document.getElementById('box');\\r\\n\\t\\t\\tvar contentwrap = document.getElementById('contentwrap');\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\tbox.style.display = 'none';\\r\\n\\t\\t\\tcontentwrap.style.display = 'block';\\r\\n\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\trender()\\r\\n\\t{\\r\\n\\t\\t//functions governing the app\\r\\n\\r\\n\\t\\t\\r\\n\\r\\n\\r\\n\\t\\t//return\\r\\n\\t\\treturn(\\r\\n\\r\\n\\t\\t\\t <div className=\\\"initialise\\\">\\r\\n      \\t\\t\\t<div id=\\\"box\\\" >\\r\\n      \\t\\t\\t<br /> <br />\\r\\n       \\t\\t\\t\\t<span id=\\\"welcome-text\\\"> WELCOME </span> <br /> <br />\\r\\n       \\t\\t\\t \\t<span id=\\\"username\\\"> Enter Username </span>\\r\\n       \\t\\t\\t\\t<br /> <br />\\r\\n       \\t\\t\\t\\t \\r\\n      \\t\\t\\t\\t\\t<input type=\\\"text\\\" onChange={this.login} id=\\\"text-line\\\" />\\r\\n      \\t\\t\\t\\t\\t<br /> <br />\\r\\n      \\t\\t\\t\\t\\t<button type=\\\"button\\\" onClick= {this.clicked} > Join </button> <br /> <br /> <br /> <br />\\r\\n    \\t\\t\\t\\t\\r\\n        \\t\\t</div> \\r\\n\\r\\n     \\t\\t\\t<div id=\\\"contentwrap\\\" >    \\r\\n\\t\\t\\t\\t<span >\\t<Message  username= {this.state.username} /> </span>\\r\\n\\t\\t\\t\\t</div>\\r\\n        \\t</div>\\r\\n\\r\\n\\r\\n     \\t\\t\\r\\n        \\t\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nexport default Chat;\",\"import React, { Component } from 'react';\\r\\n\\r\\n\\r\\nimport './App.css';\\r\\nimport Chat from './Chat.js';\\r\\n\\r\\nclass App extends Component {\\r\\n  render() {\\r\\n    return (\\r\\n      <div> <Chat /> </div>\\r\\n\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"// This optional code is used to register a service worker.\\r\\n// register() is not called by default.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on subsequent visits to a page, after all the\\r\\n// existing tabs open on the page have been closed, since previously cached\\r\\n// resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model and instructions on how to\\r\\n// opt-in, read http://bit.ly/CRA-PWA\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === '[::1]' ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport function register(config) {\\r\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n\\r\\n        // Add some additional logging to localhost, pointing developers to the\\r\\n        // service worker/PWA documentation.\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log(\\r\\n            'This web app is being served cache-first by a service ' +\\r\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\r\\n          );\\r\\n        });\\r\\n      } else {\\r\\n        // Is not localhost. Just register service worker\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl, config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        if (installingWorker == null) {\\r\\n          return;\\r\\n        }\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the updated precached content has been fetched,\\r\\n              // but the previous service worker will still serve the older\\r\\n              // content until all client tabs are closed.\\r\\n              console.log(\\r\\n                'New content is available and will be used when all ' +\\r\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\r\\n              );\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onUpdate) {\\r\\n                config.onUpdate(registration);\\r\\n              }\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log('Content is cached for offline use.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onSuccess) {\\r\\n                config.onSuccess(registration);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl, config) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      const contentType = response.headers.get('content-type');\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        'No internet connection found. App is running in offline mode.'\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\n\\r\\nReactDOM.render(<App />, document.getElementById('root'));\\r\\n\\r\\n// If you want your app to work offline and load faster, you can change\\r\\n// unregister() to register() below. Note this comes with some pitfalls.\\r\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\r\\nserviceWorker.unregister();\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{34:function(e,t,n){e.exports=n(69)},39:function(e,t,n){},40:function(e,t,n){},66:function(e,t){},69:function(e,t,n){\"use strict\";n.r(t);var a=n(0),l=n.n(a),r=n(31),s=n.n(r),c=(n(39),n(3)),o=n(4),i=n(6),u=n(5),m=n(7),d=(n(40),n(33)),E=n(32),b=n.n(E),p=function(e){function t(e){var n;Object(c.a)(this,t),(n=Object(i.a)(this,Object(u.a)(t).call(this,e))).state={username:\"\",message:\"\",messages:[]},n.socket=b.a.connect(\"localhost:5000\");return n.sendMessage=function(e){e.preventDefault(),\"\"==n.state.message?alert(\"Please enter a message before sending\"):n.socket.emit(\"data\",{username:n.props.username,message:n.state.message}),n.state.message=\"\"},n.socket.on(\"data\",function(e){!function(e){console.log(e),n.setState({messages:[].concat(Object(d.a)(n.state.messages),[e])}),console.log(n.state.messages)}(e)}),n}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"componentDidMount\",value:function(){this.scrollToBottom()}},{key:\"componentDidUpdate\",value:function(){this.scrollToBottom()}},{key:\"scrollToBottom\",value:function(){this.el.scrollIntoView({behavior:\"smooth\"})}},{key:\"render\",value:function(){var e=this;return l.a.createElement(\"span\",{className:\"block\"},l.a.createElement(\"div\",{id:\"header\"},\" \",l.a.createElement(\"span\",{id:\"welcome\"},\" Welcome \",this.props.username,\", You are online now \"),\" \"),l.a.createElement(\"div\",{id:\"output\"},this.state.messages.map(function(e){return l.a.createElement(\"div\",{id:\"bubble\"},\" \",l.a.createElement(\"strong\",null,\" \",l.a.createElement(\"span\",{id:\"userName\"},\" \",e.username),\" \",l.a.createElement(\"hr\",null),\" \"),\"  \",e.message,\" \")}),l.a.createElement(\"div\",{ref:function(t){e.el=t}})),l.a.createElement(\"span\",{className:\"InputMessage\"},l.a.createElement(\"span\",null,l.a.createElement(\"input\",{type:\"text\",value:this.state.message,onChange:function(t){return e.setState({message:t.target.value})}})),l.a.createElement(\"span\",null,l.a.createElement(\"button\",{type:\"button\",id:\"send\",onClick:this.sendMessage},\" Send \"))))}}]),t}(a.Component),h=function(e){function t(){var e,n;Object(c.a)(this,t);for(var a=arguments.length,l=new Array(a),r=0;r<a;r++)l[r]=arguments[r];return(n=Object(i.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).state={username:null},n.login=function(e){n.setState({username:e.target.value})},n.clicked=function(e){if(null==n.state.username)alert(\"Please enter username\");else{var t=document.getElementById(\"box\"),a=document.getElementById(\"contentwrap\");t.style.display=\"none\",a.style.display=\"block\"}},n}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",{className:\"initialise\"},l.a.createElement(\"div\",{id:\"box\"},l.a.createElement(\"br\",null),\" \",l.a.createElement(\"br\",null),l.a.createElement(\"span\",{id:\"welcome-text\"},\" WELCOME \"),\" \",l.a.createElement(\"br\",null),\" \",l.a.createElement(\"br\",null),l.a.createElement(\"span\",{id:\"username\"},\" Enter Username \"),l.a.createElement(\"br\",null),\" \",l.a.createElement(\"br\",null),l.a.createElement(\"input\",{type:\"text\",onChange:this.login,id:\"text-line\"}),l.a.createElement(\"br\",null),\" \",l.a.createElement(\"br\",null),l.a.createElement(\"button\",{type:\"button\",onClick:this.clicked},\" Join \"),\" \",l.a.createElement(\"br\",null),\" \",l.a.createElement(\"br\",null),\" \",l.a.createElement(\"br\",null),\" \",l.a.createElement(\"br\",null)),l.a.createElement(\"div\",{id:\"contentwrap\"},l.a.createElement(\"span\",null,\" \",l.a.createElement(p,{username:this.state.username}),\" \")))}}]),t}(l.a.Component),g=function(e){function t(){return Object(c.a)(this,t),Object(i.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",null,\" \",l.a.createElement(h,null),\" \")}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(l.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[34,1,2]]]);","extractedComments":[]}